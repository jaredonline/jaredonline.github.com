<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Jared McFarland]]></title>
  <link href="http://jaredonline.github.com/atom.xml" rel="self"/>
  <link href="http://jaredonline.github.com/"/>
  <updated>2012-06-27T11:12:15-07:00</updated>
  <id>http://jaredonline.github.com/</id>
  <author>
    <name><![CDATA[Jared McFarland]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Sprockets 2 with Rails 2.3]]></title>
    <link href="http://jaredonline.github.com/blog/2012/05/16/sprockets-2-with-rails-2-dot-3/"/>
    <updated>2012-05-16T10:33:00-07:00</updated>
    <id>http://jaredonline.github.com/blog/2012/05/16/sprockets-2-with-rails-2-dot-3</id>
    <content type="html"><![CDATA[<p>
  <strong>Update 06/26/2012</strong>
  I changed the
  <code>asset_tag_helper.rb</code>
  and
  <code>config/initializers/sprockets.rb</code>
  file to be more robust and to support a &#8220;debug mode&#8221;.
</p>
<p>
  <em>Note:</em>
  The sowftware I use to generate this blog (Jekyll) and the code syntax highlighter I&#8217;m  using
  don&#8217;t support the
  <code>#{}</code>
  Ruby style string concatenation.  In
  <strong>ALL</strong>
  the examples below, I&#8217;ve changed instances of
  <code>"#{string_one}#{string_two}"</code>
  to
  <code>string_one + string_two</code>
  This will have a few side effects, as Ruby automatically calls
  <code>#to_s</code>
  on objects when using the
  <code>#{}</code>
  style concatenation, but not the
  <code>+</code>
  style.  If you run into issues, let me know.
</p>
<p>
  At
  <a href='http://www.futureadvisor.com'>FutureAdvisor</a>
  our main app is still in Rails 2.3, mainly because
  upgrading to Rails 3 is kind of a pain.  I generally keep a few side projects
  around, like
  <a href='http://www.myroommateapp.com'>MyRoommate,</a>
  to play around with new technologies.  I&#8217;ve upgraded MyRoommate to use Rails 3.2 and
  am absolutely in love with the Asset Pipeline.  So I set out to make it work with our
  Rails 2.3 app at FutureAdvisor.
</p>
<p>
  Here&#8217;s what I&#8217;ll cover:
</p>
<ol>
  <li>
    Installing
    <a href='https://github.com/sstephenson/sprockets'>Sprockets</a>
    and mounting the Rack app
  </li>
  <li>
    Overriding Rails
    <code>AssetTagHelper</code>
    to be aware of Sprockets specific pathing
  </li>
  <li>Precompiling assets for use in production (and Sprockets manifest files).</li>
</ol>
<!-- more -->
<p>
  Obviously, the first step was Google.  I came across
  <a href='http://stackoverflow.com/questions/10404380/sprockets-2-with-rails-2-3' target='_blank'>this question on StackOverflow</a>
  which mentioned
  <a href='http://pivotallabs.com/users/dwfrank/blog/articles/1972-giving-rails-2-the-asset-pipeline-' target='_blank'>this blog from PivotalLabs.</a>
</p>
<p>
  The blog was a bit dated, from December of last year, and it didn&#8217;t work quite right.  The first steps were spot on though.
</p>
<p>
  Install the gems (hopefully you&#8217;re using Bundler):
</p>
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># Gemfile</span>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;sprockets&#39;</span><span class="p">,</span> <span class="s1">&#39;~&gt; 2.0&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># My setup uses SASS, HAML and CoffeeScript, but you can obviously use substitutes</span>
</span><span class='line'><span class="n">group</span> <span class="ss">:assets</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">gem</span> <span class="s1">&#39;sass&#39;</span>
</span><span class='line'>  <span class="n">gem</span> <span class="s1">&#39;haml&#39;</span>
</span><span class='line'>  <span class="n">gem</span> <span class="s1">&#39;coffee-script&#39;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">group</span> <span class="ss">:development</span><span class="p">,</span> <span class="ss">:test</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">gem</span> <span class="s1">&#39;sprockets-sass&#39;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># Command line; root of your app</span>
</span><span class='line'>bundle install
</span></code></pre></td></tr></table></div></figure>
<p>
  This is where my instructions diverge from those of the fine folks at PivotalLabs.  You&#8217;ll have to create a
  <code>Sprockets::Environment</code>
  for use in several places.  The first place is with Rack.  Sprockets creates a Rack middleware app that
  will respond to requests at
  <code>/assets</code>
  with the proper compiled file. I like to store the
  <code>Sprockets::Environment</code>
  in an initialize so it&#8217;s available throughout my app.
</p>
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># config/initializers/sprockets.rb</span>
</span><span class='line'><span class="k">module</span> <span class="nn">Sprockets</span>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">env</span>
</span><span class='line'>    <span class="vi">@env</span> <span class="o">||=</span> <span class="k">begin</span>
</span><span class='line'>      <span class="n">sprockets</span> <span class="o">=</span> <span class="no">Sprockets</span><span class="o">::</span><span class="no">Environment</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'>      <span class="n">sprockets</span><span class="o">.</span><span class="n">append_path</span> <span class="s1">&#39;app/assets/javascripts&#39;</span>
</span><span class='line'>      <span class="n">sprockets</span><span class="o">.</span><span class="n">append_path</span> <span class="s1">&#39;app/assets/stylesheets&#39;</span>
</span><span class='line'>      <span class="n">sprockets</span><span class="o">.</span><span class="n">css_compressor</span>  <span class="o">=</span> <span class="no">YUI</span><span class="o">::</span><span class="no">CssCompressor</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'>      <span class="n">sprockets</span><span class="o">.</span><span class="n">js_compressor</span>   <span class="o">=</span> <span class="no">YUI</span><span class="o">::</span><span class="no">JavaScriptCompressor</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'>      <span class="n">sprockets</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">manifest</span>
</span><span class='line'>    <span class="vi">@manifest</span> <span class="o">||=</span> <span class="no">Sprockets</span><span class="o">::</span><span class="no">Manifest</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">env</span><span class="p">,</span> <span class="no">Rails</span><span class="o">.</span><span class="n">root</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s2">&quot;public&quot;</span><span class="p">,</span> <span class="s2">&quot;assets&quot;</span><span class="p">,</span> <span class="s2">&quot;manifest.json&quot;</span><span class="p">))</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># This controls whether or not to use &quot;debug&quot; mode with sprockets.  In debug mode,</span>
</span><span class='line'><span class="c1"># asset tag helpers (like javascript_include_tag) will output the non-compiled</span>
</span><span class='line'><span class="c1"># version of assets, instead of the compiled version.  For example, if you had</span>
</span><span class='line'><span class="c1"># application.js as follows:</span>
</span><span class='line'><span class="c1"># </span>
</span><span class='line'><span class="c1"># = require jquery</span>
</span><span class='line'><span class="c1"># = require event_bindings</span>
</span><span class='line'><span class="c1"># </span>
</span><span class='line'><span class="c1"># javascript_include_tag &quot;application&quot; would output:</span>
</span><span class='line'><span class="c1"># &lt;script src=&quot;/assets/jquery.js?body=1&quot;&gt;&lt;/script&gt;</span>
</span><span class='line'><span class="c1"># &lt;script src=&quot;/assets/event_bindings.js?body=1&quot;&gt;&lt;/script&gt;</span>
</span><span class='line'><span class="c1"># </span>
</span><span class='line'><span class="c1"># If debug mode were turned off, you&#39;d just get</span>
</span><span class='line'><span class="c1"># &lt;script src=&quot;/assets/application.js&quot;&gt;&lt;/script&gt;</span>
</span><span class='line'><span class="c1"># </span>
</span><span class='line'><span class="c1"># Here we turn it on for all environments but Production</span>
</span><span class='line'><span class="no">Rails</span><span class="o">.</span><span class="n">configuration</span><span class="o">.</span><span class="n">action_view</span><span class="o">.</span><span class="n">debug_sprockets</span> <span class="o">=</span> <span class="kp">true</span> <span class="k">unless</span> <span class="no">Rails</span><span class="o">.</span><span class="n">env</span><span class="o">.</span><span class="n">production?</span>
</span></code></pre></td></tr></table></div></figure>
<p>
  Now I can refer to
  <code>Sprockets.env</code>
  wherever I need the
  <code>Sprockets::Environment</code>
  with the appropriate configuration.  We&#8217;ll go into more detail about the
  <code>Sprockets.manifest</code>
  method in a little bit.
</p>
<p>
  In your Rack middleware file (
  <code>config.ru</code>
  if you don&#8217;t have it, just make it and place it in the root
  directory of your app), add the following:
</p>
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># config.ru</span>
</span><span class='line'><span class="c1"># we need to protect against multiple includes of the Rails environment (trust me)</span>
</span><span class='line'><span class="nb">require</span> <span class="no">File</span><span class="o">.</span><span class="n">dirname</span><span class="p">(</span><span class="bp">__FILE__</span><span class="p">)</span> <span class="o">+</span> <span class="s1">&#39;/config/environment&#39;</span> <span class="k">if</span> <span class="o">!</span><span class="n">defined?</span><span class="p">(</span><span class="no">Rails</span><span class="p">)</span> <span class="o">||</span> <span class="o">!</span><span class="no">Rails</span><span class="o">.</span><span class="n">initialized?</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;sprockets&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="k">unless</span> <span class="no">Rails</span><span class="o">.</span><span class="n">env</span><span class="o">.</span><span class="n">production?</span>
</span><span class='line'>  <span class="n">map</span> <span class="s1">&#39;/assets&#39;</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">sprockets</span> <span class="o">=</span> <span class="no">Sprockets</span><span class="o">.</span><span class="n">env</span>
</span><span class='line'>    <span class="n">run</span> <span class="n">sprockets</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">map</span> <span class="s1">&#39;/&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">run</span> <span class="no">ActionController</span><span class="o">::</span><span class="no">Dispatcher</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>
<p>
  Notice how we only mount this app if we&#8217;re not in
  production? This is because we want to avoid compiling assets on the fly
  in our production environment.  We&#8217;d rather precompile all assets, and then
  serve them statically.  More on that later.  First, let&#8217;s setup your
  asset directories.
</p>
<p>
  Sprockets is going to look for your assets in the
  <code>/app/assets</code>
  directory, so we need to create those now.
</p>
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># Command line; root of your app</span>
</span><span class='line'>mkdir app/assets
</span><span class='line'>mkdir app/assets/javascripts
</span><span class='line'>mkdir app/assets/stylesheets
</span></code></pre></td></tr></table></div></figure>
<p>
  Now you need to move all your assets from your
  <code>/public</code>
  directory to your
  <code>/app/assets</code>
  directories so Sprockets can find them
</p>
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># Command line; root of your app</span>
</span><span class='line'>mv public/stylesheets/* app/assets/stylesheets/
</span><span class='line'>mv public/javascripts/* app/assets/javascripts/
</span></code></pre></td></tr></table></div></figure>
<p>
  If you have a stylesheet named
  <code>application.css</code>
  you should now be able to browse to
  <code>http://localhost:3000/assets/application.css</code>
  and see your stylesheet.
</p>
<p>
  At this point, you&#8217;ve got Sprockets mounted, and it&#8217;ll automagically
  interpret your SASS, HAML and CoffeeScript files, but all your helpers
  like
  <code>javascript_include_tag</code>
  and
  <code>stylesheet_link_tag</code>
  don&#8217;t work anymore.  Fortunately, we can fix that.
</p>
<p>
  When overriding Rails functionality, I like to put all my overrides in a single
  place,
  <code>/lib/extensions</code>
  so I know where they are.  The file tree (for this particular override)
  usually looks something like this:
</p>
<pre>lib&#x000A; |&#x000A;  - extenstions/&#x000A;     |&#x000A;      - action_view/&#x000A;         |&#x000A;          - helpers/&#x000A;             |&#x000A;              - asset_tag_helper.rb&#x000A;          - helpers.rb&#x000A;      - action_view.rb&#x000A;  - extensions.rb&#x000A;</pre>
<p>
  It might be a little bit of overkill just for this one override, but it helps in the
  long run if you plan on adding more overrides or extensions in the future.  Here&#8217;s the
  contents of each file:
</p>
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># extensions.rb</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;extensions/action_view&#39;</span>
</span></code></pre></td></tr></table></div></figure>
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># action_view.rb</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;extensions/action_view/helpers&#39;</span>
</span></code></pre></td></tr></table></div></figure>
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># helpers.rb</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;extensions/action_view/helpers/asset_tag_helper&#39;</span>
</span></code></pre></td></tr></table></div></figure>
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># asset_tag_helper.rb</span>
</span><span class='line'><span class="c1"># Overwrite some Asset Tag Helpers to use Sprockets</span>
</span><span class='line'><span class="k">module</span> <span class="nn">ActionView</span>
</span><span class='line'>  <span class="k">module</span> <span class="nn">Helpers</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># Overwrite the javascript_path method to use the &#39;assets&#39; directory</span>
</span><span class='line'>    <span class="c1"># instead of the default &#39;javascripts&#39; (Sprockets will figure it out)</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">javascript_path</span><span class="p">(</span><span class="n">source</span><span class="p">,</span> <span class="n">options</span><span class="p">)</span>
</span><span class='line'>      <span class="n">path</span> <span class="o">=</span> <span class="n">compute_public_path</span><span class="p">(</span><span class="n">source</span><span class="p">,</span> <span class="s1">&#39;assets&#39;</span><span class="p">,</span> <span class="n">options</span><span class="o">.</span><span class="n">merge</span><span class="p">(</span><span class="ss">:ext</span> <span class="o">=&gt;</span> <span class="s1">&#39;js&#39;</span><span class="p">))</span>
</span><span class='line'>      <span class="n">options</span><span class="o">[</span><span class="ss">:body</span><span class="o">]</span> <span class="p">?</span> <span class="n">path</span> <span class="o">+</span> <span class="s2">&quot;?body=1&quot;</span> <span class="p">:</span> <span class="n">path</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="n">alias_method</span> <span class="ss">:path_to_javascript</span><span class="p">,</span> <span class="ss">:javascript_path</span> <span class="c1"># aliased to avoid conflicts with a javascript_path named route</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># Overwrite the stylesheet_path method to use the &#39;assets&#39; directory</span>
</span><span class='line'>    <span class="c1"># instead of the default &#39;stylesheets&#39; (Sprockets will figure it out)</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">stylesheet_path</span><span class="p">(</span><span class="n">source</span><span class="p">,</span> <span class="n">options</span><span class="p">)</span>
</span><span class='line'>      <span class="n">path</span> <span class="o">=</span> <span class="n">compute_public_path</span><span class="p">(</span><span class="n">source</span><span class="p">,</span> <span class="s1">&#39;assets&#39;</span><span class="p">,</span> <span class="n">options</span><span class="o">.</span><span class="n">merge</span><span class="p">(</span><span class="ss">:ext</span> <span class="o">=&gt;</span> <span class="s1">&#39;css&#39;</span><span class="p">))</span>
</span><span class='line'>      <span class="n">options</span><span class="o">[</span><span class="ss">:body</span><span class="o">]</span> <span class="p">?</span> <span class="n">path</span> <span class="o">+</span> <span class="s2">&quot;?body=1&quot;</span> <span class="p">:</span> <span class="n">path</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="n">alias_method</span> <span class="ss">:path_to_stylesheet</span><span class="p">,</span> <span class="ss">:stylesheet_path</span> <span class="c1"># aliased to avoid conflicts with a stylesheet_path named route</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># Overwrite the stylesheet_link_tag method to expand sprockets files if </span>
</span><span class='line'>  <span class="c1"># debug mode is turned on.  Never cache files (like the default Rails 2.3 does).</span>
</span><span class='line'>  <span class="c1"># </span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">stylesheet_link_tag</span><span class="p">(</span><span class="o">*</span><span class="n">sources</span><span class="p">)</span>
</span><span class='line'>    <span class="n">options</span> <span class="o">=</span> <span class="n">sources</span><span class="o">.</span><span class="n">extract_options!</span><span class="o">.</span><span class="n">stringify_keys</span>
</span><span class='line'>    <span class="n">debug</span>   <span class="o">=</span> <span class="n">options</span><span class="o">.</span><span class="n">key?</span><span class="p">(</span><span class="ss">:debug</span><span class="p">)</span> <span class="p">?</span> <span class="n">options</span><span class="o">.</span><span class="n">delete</span><span class="p">(</span><span class="ss">:debug</span><span class="p">)</span> <span class="p">:</span> <span class="n">debug_assets?</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">sources</span><span class="o">.</span><span class="n">map</span> <span class="k">do</span> <span class="o">|</span><span class="n">source</span><span class="o">|</span>
</span><span class='line'>      <span class="k">if</span> <span class="n">debug</span> <span class="o">&amp;&amp;</span> <span class="o">!</span><span class="p">(</span><span class="n">digest_available?</span><span class="p">(</span><span class="n">source</span><span class="p">,</span> <span class="s1">&#39;css&#39;</span><span class="p">))</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="n">asset</span> <span class="o">=</span> <span class="n">asset_for</span><span class="p">(</span><span class="n">source</span><span class="p">,</span> <span class="s1">&#39;css&#39;</span><span class="p">))</span>
</span><span class='line'>        <span class="n">asset</span><span class="o">.</span><span class="n">to_a</span><span class="o">.</span><span class="n">map</span> <span class="p">{</span> <span class="o">|</span><span class="n">dep</span><span class="o">|</span> <span class="n">stylesheet_tag</span><span class="p">(</span><span class="n">dep</span><span class="o">.</span><span class="n">logical_path</span><span class="p">,</span> <span class="p">{</span> <span class="ss">:body</span> <span class="o">=&gt;</span> <span class="kp">true</span> <span class="p">}</span><span class="o">.</span><span class="n">merge</span><span class="p">(</span><span class="n">options</span><span class="p">))</span> <span class="p">}</span>
</span><span class='line'>      <span class="k">else</span>
</span><span class='line'>        <span class="n">sources</span><span class="o">.</span><span class="n">map</span> <span class="p">{</span> <span class="o">|</span><span class="n">source</span><span class="o">|</span> <span class="n">stylesheet_tag</span><span class="p">(</span><span class="n">source</span><span class="p">,</span> <span class="n">options</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span><span class="o">.</span><span class="n">uniq</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s2">&quot;</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">html_safe</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># Overwrite the javascript_include_tag method to expand sprockets files if </span>
</span><span class='line'>  <span class="c1"># debug mode is turned on.  Never cache files (like the default Rails 2.3 does).</span>
</span><span class='line'>  <span class="c1">#</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">javascript_include_tag</span><span class="p">(</span><span class="o">*</span><span class="n">sources</span><span class="p">)</span>
</span><span class='line'>    <span class="n">options</span> <span class="o">=</span> <span class="n">sources</span><span class="o">.</span><span class="n">extract_options!</span><span class="o">.</span><span class="n">stringify_keys</span>
</span><span class='line'>    <span class="n">debug</span>   <span class="o">=</span> <span class="n">options</span><span class="o">.</span><span class="n">key?</span><span class="p">(</span><span class="ss">:debug</span><span class="p">)</span> <span class="p">?</span> <span class="n">options</span><span class="o">.</span><span class="n">delete</span><span class="p">(</span><span class="ss">:debug</span><span class="p">)</span> <span class="p">:</span> <span class="n">debug_assets?</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">sources</span><span class="o">.</span><span class="n">map</span> <span class="k">do</span> <span class="o">|</span><span class="n">source</span><span class="o">|</span>
</span><span class='line'>      <span class="k">if</span> <span class="n">debug</span> <span class="o">&amp;&amp;</span> <span class="o">!</span><span class="p">(</span><span class="n">digest_available?</span><span class="p">(</span><span class="n">source</span><span class="p">,</span> <span class="s1">&#39;js&#39;</span><span class="p">))</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="n">asset</span> <span class="o">=</span> <span class="n">asset_for</span><span class="p">(</span><span class="n">source</span><span class="p">,</span> <span class="s1">&#39;js&#39;</span><span class="p">))</span>
</span><span class='line'>        <span class="n">asset</span><span class="o">.</span><span class="n">to_a</span><span class="o">.</span><span class="n">map</span> <span class="p">{</span> <span class="o">|</span><span class="n">dep</span><span class="o">|</span> <span class="n">javascript_src_tag</span><span class="p">(</span><span class="n">dep</span><span class="o">.</span><span class="n">logical_path</span><span class="p">,</span> <span class="p">{</span> <span class="ss">:body</span> <span class="o">=&gt;</span> <span class="kp">true</span> <span class="p">}</span><span class="o">.</span><span class="n">merge</span><span class="p">(</span><span class="n">options</span><span class="p">))</span> <span class="p">}</span>
</span><span class='line'>      <span class="k">else</span>
</span><span class='line'>        <span class="n">sources</span><span class="o">.</span><span class="n">map</span> <span class="p">{</span> <span class="o">|</span><span class="n">source</span><span class="o">|</span> <span class="n">javascript_src_tag</span><span class="p">(</span><span class="n">source</span><span class="o">.</span><span class="n">to_s</span><span class="p">,</span> <span class="n">options</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span><span class="o">.</span><span class="n">uniq</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s2">&quot;</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">html_safe</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="kp">private</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">javascript_src_tag</span><span class="p">(</span><span class="n">source</span><span class="p">,</span> <span class="n">options</span><span class="p">)</span>
</span><span class='line'>    <span class="n">body</span> <span class="o">=</span> <span class="n">options</span><span class="o">.</span><span class="n">has_key?</span><span class="p">(</span><span class="ss">:body</span><span class="p">)</span> <span class="p">?</span> <span class="n">options</span><span class="o">.</span><span class="n">delete</span><span class="p">(</span><span class="ss">:body</span><span class="p">)</span> <span class="p">:</span> <span class="kp">false</span>
</span><span class='line'>    <span class="n">content_tag</span><span class="p">(</span><span class="s2">&quot;script&quot;</span><span class="p">,</span> <span class="s2">&quot;&quot;</span><span class="p">,</span> <span class="p">{</span> <span class="s2">&quot;type&quot;</span> <span class="o">=&gt;</span> <span class="no">Mime</span><span class="o">::</span><span class="no">JS</span><span class="p">,</span> <span class="s2">&quot;src&quot;</span> <span class="o">=&gt;</span> <span class="n">path_to_javascript</span><span class="p">(</span><span class="n">source</span><span class="p">,</span> <span class="ss">:body</span> <span class="o">=&gt;</span> <span class="n">body</span><span class="p">)</span> <span class="p">}</span><span class="o">.</span><span class="n">merge</span><span class="p">(</span><span class="n">options</span><span class="p">))</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">stylesheet_tag</span><span class="p">(</span><span class="n">source</span><span class="p">,</span> <span class="n">options</span><span class="p">)</span>
</span><span class='line'>    <span class="n">body</span> <span class="o">=</span> <span class="n">options</span><span class="o">.</span><span class="n">has_key?</span><span class="p">(</span><span class="ss">:body</span><span class="p">)</span> <span class="p">?</span> <span class="n">options</span><span class="o">.</span><span class="n">delete</span><span class="p">(</span><span class="ss">:body</span><span class="p">)</span> <span class="p">:</span> <span class="kp">false</span>
</span><span class='line'>    <span class="n">tag</span><span class="p">(</span><span class="s2">&quot;link&quot;</span><span class="p">,</span> <span class="p">{</span> <span class="s2">&quot;rel&quot;</span> <span class="o">=&gt;</span> <span class="s2">&quot;stylesheet&quot;</span><span class="p">,</span> <span class="s2">&quot;type&quot;</span> <span class="o">=&gt;</span> <span class="no">Mime</span><span class="o">::</span><span class="no">CSS</span><span class="p">,</span> <span class="s2">&quot;media&quot;</span> <span class="o">=&gt;</span> <span class="s2">&quot;screen&quot;</span><span class="p">,</span> <span class="s2">&quot;href&quot;</span> <span class="o">=&gt;</span> <span class="n">html_escape</span><span class="p">(</span><span class="n">path_to_stylesheet</span><span class="p">(</span><span class="n">source</span><span class="p">,</span> <span class="ss">:body</span> <span class="o">=&gt;</span> <span class="n">body</span><span class="p">))</span> <span class="p">}</span><span class="o">.</span><span class="n">merge</span><span class="p">(</span><span class="n">options</span><span class="p">),</span> <span class="kp">false</span><span class="p">,</span> <span class="kp">false</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">debug_assets?</span>
</span><span class='line'>    <span class="no">Rails</span><span class="o">.</span><span class="n">configuration</span><span class="o">.</span><span class="n">action_view</span><span class="o">.</span><span class="n">debug_sprockets</span> <span class="o">||</span> <span class="kp">false</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># Add the the extension +ext+ if not present. Return full URLs otherwise untouched.</span>
</span><span class='line'>  <span class="c1"># Prefix with &lt;tt&gt;/dir/&lt;/tt&gt; if lacking a leading +/+. Account for relative URL</span>
</span><span class='line'>  <span class="c1"># roots. Rewrite the asset path for cache-busting asset ids. Include</span>
</span><span class='line'>  <span class="c1"># asset host, if configured, with the correct request protocol.</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">compute_public_path</span><span class="p">(</span><span class="n">source</span><span class="p">,</span> <span class="n">dir</span><span class="p">,</span> <span class="n">options</span> <span class="o">=</span> <span class="p">{})</span>
</span><span class='line'>    <span class="n">source</span> <span class="o">=</span> <span class="n">source</span><span class="o">.</span><span class="n">to_s</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">source</span> <span class="k">if</span> <span class="n">is_uri?</span><span class="p">(</span><span class="n">source</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">source</span> <span class="o">=</span> <span class="n">rewrite_extension</span><span class="p">(</span><span class="n">source</span><span class="p">,</span> <span class="n">options</span><span class="o">[</span><span class="ss">:ext</span><span class="o">]</span><span class="p">)</span> <span class="k">if</span> <span class="n">options</span><span class="o">[</span><span class="ss">:ext</span><span class="o">]</span>
</span><span class='line'>    <span class="n">source</span> <span class="o">=</span> <span class="n">rewrite_asset_path</span><span class="p">(</span><span class="n">source</span><span class="p">,</span> <span class="n">dir</span><span class="p">,</span> <span class="n">options</span><span class="p">)</span>
</span><span class='line'>    <span class="n">source</span> <span class="o">=</span> <span class="n">rewrite_relative_url_root</span><span class="p">(</span><span class="n">source</span><span class="p">,</span> <span class="no">ActionController</span><span class="o">::</span><span class="no">Base</span><span class="o">.</span><span class="n">relative_url_root</span><span class="p">)</span>
</span><span class='line'>    <span class="n">source</span> <span class="o">=</span> <span class="n">rewrite_host_and_protocol</span><span class="p">(</span><span class="n">source</span><span class="p">,</span> <span class="n">options</span><span class="o">[</span><span class="ss">:protocol</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>    <span class="n">source</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">rewrite_relative_url_root</span><span class="p">(</span><span class="n">source</span><span class="p">,</span> <span class="n">relative_root_url</span><span class="p">)</span>
</span><span class='line'>    <span class="n">relative_root_url</span> <span class="o">&amp;&amp;</span> <span class="o">!</span><span class="p">(</span><span class="n">source</span> <span class="o">=~</span> <span class="no">Regexp</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&quot;^&quot;</span> <span class="o">+</span> <span class="n">relative_root_url</span> <span class="o">+</span> <span class="s2">&quot;/&quot;</span><span class="p">))</span> <span class="p">?</span> <span class="n">relative_root_url</span> <span class="o">+</span> <span class="n">source</span> <span class="p">:</span> <span class="n">source</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">has_request?</span>
</span><span class='line'>    <span class="vi">@controller</span><span class="o">.</span><span class="n">respond_to?</span><span class="p">(</span><span class="ss">:request</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">rewrite_host_and_protocol</span><span class="p">(</span><span class="n">source</span><span class="p">,</span> <span class="n">porotocol</span> <span class="o">=</span> <span class="kp">nil</span><span class="p">)</span>
</span><span class='line'>    <span class="n">host</span> <span class="o">=</span> <span class="n">compute_asset_host</span><span class="p">(</span><span class="n">source</span><span class="p">)</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">has_request?</span> <span class="o">&amp;&amp;</span> <span class="o">!</span><span class="n">host</span><span class="o">.</span><span class="n">blank?</span> <span class="o">&amp;&amp;</span> <span class="o">!</span><span class="n">is_uri?</span><span class="p">(</span><span class="n">host</span><span class="p">)</span>
</span><span class='line'>      <span class="n">host</span> <span class="o">=</span> <span class="vi">@controller</span><span class="o">.</span><span class="n">request</span><span class="o">.</span><span class="n">protocol</span> <span class="o">+</span> <span class="n">host</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="n">host</span> <span class="p">?</span> <span class="n">host</span> <span class="o">+</span> <span class="n">source</span> <span class="p">:</span> <span class="n">source</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># Check for a sprockets version of the asset, otherwise use the default rails behaviour.</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">rewrite_asset_path</span><span class="p">(</span><span class="n">source</span><span class="p">,</span> <span class="n">dir</span><span class="p">,</span> <span class="n">options</span> <span class="o">=</span> <span class="p">{})</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">source</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span> <span class="o">==</span> <span class="sc">?/</span>
</span><span class='line'>      <span class="n">source</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>      <span class="n">source</span> <span class="o">=</span> <span class="n">digest_for</span><span class="p">(</span><span class="n">source</span><span class="o">.</span><span class="n">to_s</span><span class="p">)</span>
</span><span class='line'>      <span class="n">source</span> <span class="o">=</span> <span class="no">Pathname</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&quot;/&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">dir</span><span class="p">,</span> <span class="n">source</span><span class="p">)</span><span class="o">.</span><span class="n">to_s</span>
</span><span class='line'>      <span class="n">source</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">digest_available?</span><span class="p">(</span><span class="n">logical_path</span><span class="p">,</span> <span class="n">ext</span><span class="p">)</span>
</span><span class='line'>    <span class="p">(</span><span class="n">manifest</span> <span class="o">=</span> <span class="no">Sprockets</span><span class="o">.</span><span class="n">manifest</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="n">manifest</span><span class="o">.</span><span class="n">assets</span><span class="o">[</span><span class="n">logical_path</span> <span class="o">+</span> <span class="s2">&quot;.&quot;</span> <span class="o">+</span> <span class="n">ext</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">digest_for</span><span class="p">(</span><span class="n">logical_path</span><span class="p">)</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">manifest</span> <span class="o">=</span> <span class="no">Sprockets</span><span class="o">.</span><span class="n">manifest</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="n">digest</span> <span class="o">=</span> <span class="n">manifest</span><span class="o">.</span><span class="n">assets</span><span class="o">[</span><span class="n">logical_path</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>      <span class="n">digest</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>      <span class="n">logical_path</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">rewrite_extension</span><span class="p">(</span><span class="n">source</span><span class="p">,</span> <span class="n">ext</span><span class="p">)</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">ext</span> <span class="o">&amp;&amp;</span> <span class="no">File</span><span class="o">.</span><span class="n">extname</span><span class="p">(</span><span class="n">source</span><span class="p">)</span> <span class="o">!=</span> <span class="s2">&quot;.&quot;</span> <span class="o">+</span> <span class="n">ext</span>
</span><span class='line'>      <span class="n">source</span> <span class="o">+</span> <span class="s2">&quot;.&quot;</span> <span class="n">ext</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>      <span class="n">source</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">is_uri?</span><span class="p">(</span><span class="n">path</span><span class="p">)</span>
</span><span class='line'>    <span class="n">path</span> <span class="o">=~</span> <span class="sr">%r{^[-a-z]+://|^(?:cid|data):|^//}</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">asset_for</span><span class="p">(</span><span class="n">source</span><span class="p">,</span> <span class="n">ext</span><span class="p">)</span>
</span><span class='line'>    <span class="n">source</span> <span class="o">=</span> <span class="n">source</span><span class="o">.</span><span class="n">to_s</span>
</span><span class='line'>    <span class="k">return</span> <span class="kp">nil</span> <span class="k">if</span> <span class="n">is_uri?</span><span class="p">(</span><span class="n">source</span><span class="p">)</span>
</span><span class='line'>    <span class="n">source</span> <span class="o">=</span> <span class="n">rewrite_extension</span><span class="p">(</span><span class="n">source</span><span class="p">,</span> <span class="n">ext</span><span class="p">)</span>
</span><span class='line'>    <span class="no">Sprockets</span><span class="o">.</span><span class="n">env</span><span class="o">[</span><span class="n">source</span><span class="o">]</span>
</span><span class='line'>  <span class="k">rescue</span> <span class="no">Sprockets</span><span class="o">::</span><span class="no">FileOutsidePaths</span>
</span><span class='line'>    <span class="kp">nil</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>
<p>
  Phew! Now that we&#8217;ve monkey patched the Rails
  <code>AssetTagHelper</code>
  to play nicely with Sprockets, we can do things like this:
</p>
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># ERB</span>
</span><span class='line'><span class="o">&lt;</span><span class="sx">%= javascript_include_tag &#39;application&#39; %&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sx"># HAML</span>
</span><span class='line'><span class="sx">=</span> <span class="n">javascript_include_tag</span> <span class="s1">&#39;application&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># =&gt; &lt;link href=&#39;/assets/application.css&#39; media=&#39;screen&#39; rel=&#39;stylesheet&#39; type=&#39;text/css&#39; /&gt;</span>
</span></code></pre></td></tr></table></div></figure>
<p>
  At this point, we&#8217;ve tacked two of the three main objectives; installing Sprockets and the
  asset helpers.  Now we need to talk about precompiling.
</p>
<p>
  We&#8217;ve actually done most of the setup for precompiling already. I took a look at the Rails
  <code><a href='https://github.com/rails/rails/blob/3-2-stable/actionpack/lib/sprockets/assets.rake'>assets.rake</a></code>
  file and copied most of it to create my own:
</p>
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># lib/tasks/assets.rake</span>
</span><span class='line'><span class="nb">require</span> <span class="s2">&quot;fileutils&quot;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;pathname&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">namespace</span> <span class="ss">:assets</span> <span class="k">do</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">ruby_rake_task</span><span class="p">(</span><span class="n">task</span><span class="p">,</span> <span class="nb">fork</span> <span class="o">=</span> <span class="kp">true</span><span class="p">)</span>
</span><span class='line'>    <span class="n">env</span>    <span class="o">=</span> <span class="no">ENV</span><span class="o">[</span><span class="s1">&#39;RAILS_ENV&#39;</span><span class="o">]</span> <span class="o">||</span> <span class="s1">&#39;production&#39;</span>
</span><span class='line'>    <span class="n">groups</span> <span class="o">=</span> <span class="no">ENV</span><span class="o">[</span><span class="s1">&#39;RAILS_GROUPS&#39;</span><span class="o">]</span> <span class="o">||</span> <span class="s1">&#39;assets&#39;</span>
</span><span class='line'>    <span class="n">args</span>   <span class="o">=</span> <span class="o">[</span><span class="vg">$0</span><span class="p">,</span> <span class="n">task</span><span class="p">,</span> <span class="s2">&quot;RAILS_ENV=&quot;</span> <span class="o">+</span> <span class="n">env</span><span class="p">,</span> <span class="s2">&quot;RAILS_GROUPS=&quot;</span> <span class="o">+</span> <span class="n">groups</span><span class="o">]</span>
</span><span class='line'>    <span class="n">args</span> <span class="o">&lt;&lt;</span> <span class="s2">&quot;--trace&quot;</span> <span class="k">if</span> <span class="no">Rake</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">options</span><span class="o">.</span><span class="n">trace</span>
</span><span class='line'>    <span class="k">if</span> <span class="vg">$0</span> <span class="o">=~</span> <span class="sr">/rake\.bat\Z/i</span>
</span><span class='line'>      <span class="no">Kernel</span><span class="o">.</span><span class="n">exec</span> <span class="vg">$0</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>      <span class="nb">fork</span> <span class="p">?</span> <span class="n">ruby</span><span class="p">(</span><span class="o">*</span><span class="n">args</span><span class="p">)</span> <span class="p">:</span> <span class="no">Kernel</span><span class="o">.</span><span class="n">exec</span><span class="p">(</span><span class="no">FileUtils</span><span class="o">::</span><span class="no">RUBY</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># We are currently running with no explicit bundler group</span>
</span><span class='line'>  <span class="c1"># and/or no explicit environment - we have to reinvoke rake to</span>
</span><span class='line'>  <span class="c1"># execute this task.</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">invoke_or_reboot_rake_task</span><span class="p">(</span><span class="n">task</span><span class="p">)</span>
</span><span class='line'>    <span class="k">if</span> <span class="no">ENV</span><span class="o">[</span><span class="s1">&#39;RAILS_GROUPS&#39;</span><span class="o">].</span><span class="n">to_s</span><span class="o">.</span><span class="n">empty?</span> <span class="o">||</span> <span class="no">ENV</span><span class="o">[</span><span class="s1">&#39;RAILS_ENV&#39;</span><span class="o">].</span><span class="n">to_s</span><span class="o">.</span><span class="n">empty?</span>
</span><span class='line'>      <span class="n">ruby_rake_task</span> <span class="n">task</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>      <span class="no">Rake</span><span class="o">::</span><span class="no">Task</span><span class="o">[</span><span class="n">task</span><span class="o">].</span><span class="n">invoke</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">desc</span> <span class="s2">&quot;Compile all the assets named in config.assets.precompile&quot;</span>
</span><span class='line'>  <span class="n">task</span> <span class="ss">:precompile</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">invoke_or_reboot_rake_task</span> <span class="s2">&quot;assets:precompile:all&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">namespace</span> <span class="ss">:precompile</span> <span class="k">do</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">internal_precompile</span><span class="p">(</span><span class="n">digest</span> <span class="o">=</span> <span class="kp">nil</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1"># Ensure that action view is loaded and the appropriate</span>
</span><span class='line'>      <span class="c1"># sprockets hooks get executed</span>
</span><span class='line'>      <span class="n">_</span> <span class="o">=</span> <span class="no">ActionView</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">sprockets</span> <span class="o">=</span> <span class="no">Sprockets</span><span class="o">.</span><span class="n">env</span>
</span><span class='line'>      <span class="n">manifest_path</span> <span class="o">=</span> <span class="no">Pathname</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="no">Rails</span><span class="o">.</span><span class="n">public_path</span><span class="p">)</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s2">&quot;assets&quot;</span><span class="p">,</span> <span class="s2">&quot;manifest.json&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">manifest</span> <span class="o">=</span> <span class="no">Sprockets</span><span class="o">.</span><span class="n">manifest</span>
</span><span class='line'>      <span class="n">manifest</span><span class="o">.</span><span class="n">compile</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">task</span> <span class="ss">:all</span> <span class="k">do</span>
</span><span class='line'>      <span class="no">Rake</span><span class="o">::</span><span class="no">Task</span><span class="o">[</span><span class="s2">&quot;assets:precompile:primary&quot;</span><span class="o">].</span><span class="n">invoke</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">task</span> <span class="ss">:primary</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="s2">&quot;assets:environment&quot;</span><span class="p">,</span> <span class="s2">&quot;tmp:cache:clear&quot;</span><span class="o">]</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">internal_precompile</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">task</span> <span class="ss">:nondigest</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="s2">&quot;assets:environment&quot;</span><span class="p">,</span> <span class="s2">&quot;tmp:cache:clear&quot;</span><span class="o">]</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">internal_precompile</span><span class="p">(</span><span class="kp">false</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">desc</span> <span class="s2">&quot;Remove compiled assets&quot;</span>
</span><span class='line'>  <span class="n">task</span> <span class="ss">:clean</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">invoke_or_reboot_rake_task</span> <span class="s2">&quot;assets:clean:all&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">namespace</span> <span class="ss">:clean</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">task</span> <span class="ss">:all</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="s2">&quot;assets:environment&quot;</span><span class="p">,</span> <span class="s2">&quot;tmp:cache:clear&quot;</span><span class="o">]</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">public_asset_path</span> <span class="o">=</span> <span class="no">Pathname</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="no">Rails</span><span class="o">.</span><span class="n">public_path</span><span class="p">)</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s2">&quot;assets&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="n">rm_rf</span> <span class="n">public_asset_path</span><span class="p">,</span> <span class="ss">:secure</span> <span class="o">=&gt;</span> <span class="kp">true</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">task</span> <span class="ss">:environment</span> <span class="k">do</span>
</span><span class='line'>    <span class="no">Rake</span><span class="o">::</span><span class="no">Task</span><span class="o">[</span><span class="s2">&quot;environment&quot;</span><span class="o">].</span><span class="n">invoke</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>
<p>
  That&#8217;s a lot of code to give use two rake tasks;
  <code>rake assets:precompile</code>
  and
  <code>rake assets:clean</code>
  Keep in mind both of those tasks will run in
  <code>'production'</code>
  by default (because that&#8217;s generally the only place you want compiled assets).
</p>
<p>
  The first task,
  <code>rake assets:precompile</code>
  will generate all of your compiled assets in
  <code>/public/assets</code>
  including a manifest file,
  <code>manifest.json</code>
  which contains the mapping from uncompiled asset to precompiled asset.
</p>
<p>
  The second task,
  <code>rake assets:clean</code>
  will delete all of your precompiled assets.
</p>
<p>
  That&#8217;s it! You should now be ready to use Sprockets with Rails 2.3.
</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Serving a static website with Heroku]]></title>
    <link href="http://jaredonline.github.com/blog/2012/03/05/serving-a-static-website-with-heroku/"/>
    <updated>2012-03-05T19:21:00-08:00</updated>
    <id>http://jaredonline.github.com/blog/2012/03/05/serving-a-static-website-with-heroku</id>
    <content type="html"><![CDATA[<p>
  I recently wanted to setup a very simple static HTML site for
  a friend’s school project. I didn’t want to go through the
  hassle of setting up hosting, I just wanted to put it somewhere.
</p>
<p>
  In the past I’ve used Heroku for this, but I’d never setup a
  static site there.
</p>
<p>
  This is how I did it.
</p>
<!-- more -->
<h2>Stasis</h2>
<p>
  I used stasis to generate the content. It’s an extremely awesome
  static site generator using Ruby and all sorts of templating engines.
  I opted for HAML and SASS.
</p>
<p>
  My file structure looked something like this:
</p>
<pre>root/&#x000A; |&#x000A;  - config.ru&#x000A;  - Procfile&#x000A;  - Gemfile&#x000A;  - controller.rb&#x000A;  - index.html.haml&#x000A;  - layout.html.haml&#x000A;  - sub_dir/&#x000A;  - stylesheets/&#x000A;    |&#x000A;     - style.css.sass&#x000A;  - images/&#x000A;</pre>
<p>
  I’ll talk about the config.ru and Procfile later. You can checkout stasis if you
  want to learn more about it’s structure.
</p>
<p>
  My Gemfile contained the gems necessary for development and deployment, and it looks like this:
</p>
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">source</span> <span class="ss">:rubygems</span>
</span><span class='line'>
</span><span class='line'><span class="n">gem</span> <span class="s2">&quot;haml&quot;</span>
</span><span class='line'><span class="n">gem</span> <span class="s2">&quot;sass&quot;</span>
</span><span class='line'><span class="n">gem</span> <span class="s2">&quot;unicorn&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">gem</span> <span class="s2">&quot;rack-contrib&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">group</span> <span class="ss">:development</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">gem</span> <span class="s2">&quot;heroku&quot;</span>
</span><span class='line'>  <span class="n">gem</span> <span class="s2">&quot;foreman&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>
<h2>Rack</h2>
<p>The config.ru is to tell Heroku to use Rack to serve the website. It looks like this:</p>
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">use</span> <span class="no">Rack</span><span class="o">::</span><span class="no">Static</span><span class="p">,</span>  <span class="ss">:urls</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="s2">&quot;/stylesheets&quot;</span><span class="p">,</span> <span class="s2">&quot;/images&quot;</span><span class="o">]</span><span class="p">,</span> <span class="ss">:root</span> <span class="o">=&gt;</span> <span class="s2">&quot;public&quot;</span>
</span><span class='line'><span class="n">run</span> <span class="no">Rack</span><span class="o">::</span><span class="no">Directory</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&quot;public&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">run</span> <span class="nb">lambda</span> <span class="p">{</span> <span class="o">|</span><span class="n">env</span><span class="o">|</span>
</span><span class='line'>  <span class="o">[</span>
</span><span class='line'>    <span class="mi">200</span><span class="p">,</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>      <span class="s1">&#39;Content-Type&#39;</span>  <span class="o">=&gt;</span> <span class="s1">&#39;text/html&#39;</span><span class="p">,</span>
</span><span class='line'>      <span class="s1">&#39;Cache-Control&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;public, max-age=86400&#39;</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="no">File</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="s1">&#39;public/index.html&#39;</span><span class="p">,</span> <span class="no">File</span><span class="o">::</span><span class="no">RDONLY</span><span class="p">)</span>
</span><span class='line'>  <span class="o">]</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>
<p>
  The Rack::Static line tells it to serve the contents of the directories “public/stylesheets”
  and “public/images” as static content.
</p>
<p>
  The Rack::Directory.new(&#8220;public&#8221;) line tells Rack to look for requests matching the contents of
  the “public” directory and serve the corresponding files.
</p>
<p>
  The last block, the lambda { |env| block, tells Rack to default to rendering the file found
  at “public/index.html”. This makes “/” work.
</p>
<h2>Foreman</h2>
<p>Heroku uses Foreman. It uses a Procfile in the current working directory to tell it what processes to start and monitor.</p>
<p>
  My Procfile looks like this:
</p>
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">web</span><span class="p">:</span> <span class="n">bundle</span> <span class="nb">exec</span> <span class="n">unicorn</span> <span class="o">-</span><span class="nb">p</span> <span class="vg">$PORT</span>
</span></code></pre></td></tr></table></div></figure>
<h2>Heroku</h2>
<p>Now to tie it all together. You’ll need to create a new app on Heroku like so:</p>
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>heroku apps:create --stack cedar <span class="o">[</span>NAME OF YOUR APP<span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>
<p>Then simply</p>
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>git push heroku master
</span></code></pre></td></tr></table></div></figure>
<p>
  and you should be working!
</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Full Stack Ruby on Rails Development for Snow Leopard]]></title>
    <link href="http://jaredonline.github.com/blog/2009/12/05/full-stack-ruby-on-rails-development-for-snow-leopard/"/>
    <updated>2009-12-05T18:00:00-08:00</updated>
    <id>http://jaredonline.github.com/blog/2009/12/05/full-stack-ruby-on-rails-development-for-snow-leopard</id>
    <content type="html"><![CDATA[<p>
  This blog is gonna talk about setting up Ruby, RubyGems, SVN, Git, Rails and MySQL for Snow Leopard.
  There&#8217;s a few other articles that go really in depth with setting up custom server configurations
  for Snow Leopard, but I found them to be doing more than I need for my personal development
  (
  <a href='http://www.metaskills.net/2009/9/5/the-ultimate-os-x-snow-leopard-stack-for-rails-development-x86_64-macports-ruby-1-8-1-9-sql-server-more'>here</a>
  ).
</p>
<p>
  In order to get started you&#8217;ll have to have Snow Leopard installed, along with XCode
  (which includes X11).  If you don&#8217;t install XCode you&#8217;ll get an error trying to
  install things with MacPorts.
</p>
<p>
  <strong>
    Disclaimer:
  </strong>
  This setup worked for me twice, once on a MBP and once on a 27&#8221; iMac i5.  I can&#8217;t guarantee
  it&#8217;ll work for you.  If you run into issues, feel free to leave a comment, but I can&#8217;t
  promise I&#8217;ll know the answer.
</p>
<p>
  I&#8217;ve setup two different Snow Leopard computers in the past couple days to do this, and
  I&#8217;ve compiled some notes on what worked for me.
</p>
<!-- more -->
<p>
  To start off, install
  <a href='http://www.macports.org/install.php'>MacPorts j</a>
  following their
  <a href='http://guide.macports.org/'>instructions.</a>
</p>
<p>
  If you&#8217;re like me, you use Bash as your default shell, so add this
  to your
  <code>~/.profile</code>
</p>
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nb">export </span><span class="nv">PATH</span><span class="o">=</span><span class="s2">&quot;/usr/local/bin:$PATH&quot;</span>
</span><span class='line'><span class="nb">export </span><span class="nv">MANPATH</span><span class="o">=</span><span class="s2">&quot;/usr/local/share/man:$MANPATH&quot;</span>
</span><span class='line'><span class="nb">export </span><span class="nv">INFOPATH</span><span class="o">=</span><span class="s2">&quot;/usr/local/share/info:$INFOPATH&quot;</span>
</span></code></pre></td></tr></table></div></figure>
<p>
  Chances are, if you&#8217;re using Snow Leopard, you&#8217;re running 64-bit apps and you have a chip that supports
  64-bit architecture.  If it does, you can force MacPorts to install apps with 64-bit architecture.
  Open up
  <code>/opt/local/etc/macports/macports.conf</code>
  And change the &#8220;build_arch&#8221; setting (around line 59) to
  <code>x86_64.</code>
</p>
<p>
  Once that&#8217;s done, you&#8217;re ready to install Ruby.
</p>
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>sudo port install ruby
</span></code></pre></td></tr></table></div></figure>
<p>
  It&#8217;ll take awhile, so go grab a cup of coffee or something while you wait.  Once that&#8217;s done, running
  <code>which ruby</code>
  should show
  <code>/opt/local/bin/ruby</code>
</p>
<p>
  And running
  <code>ruby -v</code>
  should show
  <code>ruby 1.8.7 (2009-06-12 patchlevel 174) [i686-darwin10]</code>
</p>
<p>
  Next step is rubygems
</p>
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>sudo port install rb-rubygems
</span></code></pre></td></tr></table></div></figure>
<p>
  After that is SVN and Git
</p>
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>sudo port install subversion
</span><span class='line'>sudo port install git-core +svn
</span></code></pre></td></tr></table></div></figure>
<p>
  Next up is MySQL.  At the time of writing this, no package for Mac OS 10.6 has been released.  So
  download the 10.5 x86_64 package from
  <a href='http://dev.mysql.com/downloads/mysql/5.1.html#macosx-dmg'>here</a>
  .
</p>
<p>
  Install both packages and the PrefPane (for some reason the pref pane is still 32-bit so it&#8217;ll
  ask you to restart System Preferences every time you use it).
</p>
<p>
  In order to access MySQL from the command line, add this to your
  <code>~/.profile</code>
</p>
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nb">export </span><span class="nv">PATH</span><span class="o">=</span><span class="s2">&quot;/usr/local/bin:/usr/local/sbin:/usr/local/mysql/bin:$PATH&quot;</span>
</span></code></pre></td></tr></table></div></figure>
<p>
  Then run the following in order to refresh your shell.
</p>
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nb">source</span> ~/.profile
</span></code></pre></td></tr></table></div></figure>
<p>
  After installing Rails, you need to install the MySQL adapter gem:
</p>
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>sudo env <span class="nv">ARCHFLAGS</span><span class="o">=</span><span class="s2">&quot;-arch x86_64&quot;</span> gem install mysql -- --with-mysql-config<span class="o">=</span>/usr/local/mysql/bin/mysql_config
</span></code></pre></td></tr></table></div></figure>
<p>
  That particular command will tell it to instal the x86_64 version of the gem, and points it to your mysql config files.
</p>
<p>
  Lastly, install Rails. This will install about 8 different gems, and take a few minutes.
</p>
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>sudo gem install rails
</span></code></pre></td></tr></table></div></figure>
<p>
  Afterwards, you can test this all by running:
</p>
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>rails testapp -d mysql
</span><span class='line'><span class="nb">cd </span>testapp
</span><span class='line'>rake db:create:all
</span><span class='line'>./script/server
</span></code></pre></td></tr></table></div></figure>
<p>
  And browse to
  <a href='http://localhost:3000'>http://localhost:3000</a>
  .
</p>
<p>
  <strong>
    Bonus:
  </strong>
  If you&#8217;re using
  <code>sqlite3</code>
  , then run this command to get it to install.
</p>
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>sudo gem install sqlite3-ruby
</span></code></pre></td></tr></table></div></figure>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Installing ImageMagick on SnowLeopard 10.6]]></title>
    <link href="http://jaredonline.github.com/blog/2009/06/27/installing-imagemagick-on-snowleopard-10-dot-6/"/>
    <updated>2009-06-27T18:16:00-07:00</updated>
    <id>http://jaredonline.github.com/blog/2009/06/27/installing-imagemagick-on-snowleopard-10-dot-6</id>
    <content type="html"><![CDATA[<p>
  <strong>Update:</strong>
  You can install it a lot easier by following these
  <a href='http://github.com/masterkain/ImageMagick-sl'>instructions.</a>
</p>
<p>
  When I installed Snow Leopard on my laptop I did a clean install, so my working
  environment on my laptop was totally wiped out.  I had to reinstall
  ImageMagick the other day ( you can imagine my frustration when I was getting
  ImageMagick related errors thinking it was already installed properly).
  The installation was a bit tricky, so I figured I&#8217;d share it with ya&#8217;ll.
</p>
<p>
  Here&#8217;s how I did it.
</p>
<!-- more -->
<p>
  First, go to the
  <a href='http://www.macports.org/'>MacPorts</a>
  site and follow their download/install instructions for OS 10.5 Leopard.
  This install went smoothly for me.
</p>
<p>
  Next, open up Terminal.app and run
</p>
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>sudo port install ImageMagick
</span></code></pre></td></tr></table></div></figure>
<p>
  This will take quite awhile, as MacPorts will download and install all of the
  ImageMagick dependencies.  However, when I ran the install, it didn&#8217;t
  actually download and install ImageMagick.
</p>
<p>
  To get ImageMagick installed and running, go to the ImageMagick download page and
  grab the Mac OS X Universal Binary.  Unzip it and you&#8217;ll have a working copy
  of ImageMagick inside that folder (the folder will be called something like ImageMagick-6.5.3).
</p>
<p>
  Now, go back to the Terminal, and move the ImageMagick folder to a permanent
  home (probably not good for it to sit in your Downloads folder or on your Desktop).
  I moved my copy to
  <code>/usr/bin/</code>
  and renamed the folder from
  <code>ImageMagick-6.5.3</code>
  to
  <code>imagemagick</code>
  so my full path is
  <code>/usr/bin/imagemagick</code>
  .
</p>
<p>
  Lastly, still in Terminal open up your
  <code>.bash_profile</code>
  or
  <code>.profile file</code>
  (found in your home directory; mine is
  <code>~/.bash_profile</code>
  ), and add the following lines to it:
</p>
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nb">export </span><span class="nv">MAGICK_HOME</span><span class="o">=</span><span class="s2">&quot;/usr/bin/imagemagick&quot;</span>
</span><span class='line'><span class="nb">export </span><span class="nv">PATH</span><span class="o">=</span><span class="nv">$MAGICK_HOME</span>/bin:<span class="nv">$PATH</span>
</span><span class='line'><span class="nb">export </span><span class="nv">DYLD_LIBRARY_PATH</span><span class="o">=</span><span class="s2">&quot;$MAGICK_HOME/lib&quot;</span>
</span></code></pre></td></tr></table></div></figure>
<p>
  <strong>
    Note:
  </strong>
  If you moved your ImageMagick directory to a different spot in step 4, then the variable
  <code>MAGICK_HOME</code>
  will need to be assigned the proper value.
</p>
<p>
  Restart Terminal and you should be set to jet with ImageMagick in Snow Leopard [=
</p>
]]></content>
  </entry>
  
</feed>
